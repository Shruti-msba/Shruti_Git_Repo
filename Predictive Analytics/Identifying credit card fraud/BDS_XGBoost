{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"BDS_XGBoost","provenance":[],"collapsed_sections":[]},"kernelspec":{"name":"python3","display_name":"Python 3"},"accelerator":"GPU"},"cells":[{"cell_type":"markdown","metadata":{"id":"dElkAyTWQ8yg"},"source":["Reference:\n","\n","https://www.kaggle.com/currie32/predicting-fraud-with-tensorflow\n","\n","https://www.kaggle.com/janiobachmann/credit-fraud-dealing-with-imbalanced-datasets\n","\n","https://www.kaggle.com/nschneider/gbm-vs-xgboost-vs-lightgbm"]},{"cell_type":"code","metadata":{"id":"HhMUs5KJT8a_","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1607635068964,"user_tz":360,"elapsed":514,"user":{"displayName":"Ryan J Rue","photoUrl":"","userId":"16511186244919382186"}},"outputId":"132a9e1e-e519-42b6-a87a-30b3e16500c9"},"source":["# Imported Libraries\n","\n","import numpy as np # linear algebra\n","import pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\n","import matplotlib.pyplot as plt\n","\n","#training models\n","from sklearn.model_selection import train_test_split, KFold, RandomizedSearchCV\n","from sklearn.metrics import plot_roc_curve\n","from xgboost import XGBClassifier\n","from sklearn.metrics import roc_curve, roc_auc_score, classification_report, accuracy_score, confusion_matrix, recall_score, precision_score\n","from imblearn.over_sampling import SMOTE\n","from imblearn.pipeline import make_pipeline\n","\n","from google.colab import drive\n","drive.mount('/drive')"],"execution_count":null,"outputs":[{"output_type":"stream","text":["Drive already mounted at /drive; to attempt to forcibly remount, call drive.mount(\"/drive\", force_remount=True).\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"sqf1PWdlU5MZ","colab":{"base_uri":"https://localhost:8080/","height":210},"executionInfo":{"status":"ok","timestamp":1607628179284,"user_tz":360,"elapsed":2210,"user":{"displayName":"Ryan J Rue","photoUrl":"","userId":"16511186244919382186"}},"outputId":"fccdc7a4-3bc2-490e-ac85-73fb2e6ecb7f"},"source":["df = pd.read_csv('/drive/My Drive/BDS_Project/creditcard.csv')\r\n","df = df.drop(['V28','V27','V26','V25','V24','V23','V22','V20','V15','V13','V8'], axis=1)\r\n","df.head()"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Time</th>\n","      <th>V1</th>\n","      <th>V2</th>\n","      <th>V3</th>\n","      <th>V4</th>\n","      <th>V5</th>\n","      <th>V6</th>\n","      <th>V7</th>\n","      <th>V9</th>\n","      <th>V10</th>\n","      <th>V11</th>\n","      <th>V12</th>\n","      <th>V14</th>\n","      <th>V16</th>\n","      <th>V17</th>\n","      <th>V18</th>\n","      <th>V19</th>\n","      <th>V21</th>\n","      <th>Amount</th>\n","      <th>Class</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0.0</td>\n","      <td>-1.359807</td>\n","      <td>-0.072781</td>\n","      <td>2.536347</td>\n","      <td>1.378155</td>\n","      <td>-0.338321</td>\n","      <td>0.462388</td>\n","      <td>0.239599</td>\n","      <td>0.363787</td>\n","      <td>0.090794</td>\n","      <td>-0.551600</td>\n","      <td>-0.617801</td>\n","      <td>-0.311169</td>\n","      <td>-0.470401</td>\n","      <td>0.207971</td>\n","      <td>0.025791</td>\n","      <td>0.403993</td>\n","      <td>-0.018307</td>\n","      <td>149.62</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>0.0</td>\n","      <td>1.191857</td>\n","      <td>0.266151</td>\n","      <td>0.166480</td>\n","      <td>0.448154</td>\n","      <td>0.060018</td>\n","      <td>-0.082361</td>\n","      <td>-0.078803</td>\n","      <td>-0.255425</td>\n","      <td>-0.166974</td>\n","      <td>1.612727</td>\n","      <td>1.065235</td>\n","      <td>-0.143772</td>\n","      <td>0.463917</td>\n","      <td>-0.114805</td>\n","      <td>-0.183361</td>\n","      <td>-0.145783</td>\n","      <td>-0.225775</td>\n","      <td>2.69</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1.0</td>\n","      <td>-1.358354</td>\n","      <td>-1.340163</td>\n","      <td>1.773209</td>\n","      <td>0.379780</td>\n","      <td>-0.503198</td>\n","      <td>1.800499</td>\n","      <td>0.791461</td>\n","      <td>-1.514654</td>\n","      <td>0.207643</td>\n","      <td>0.624501</td>\n","      <td>0.066084</td>\n","      <td>-0.165946</td>\n","      <td>-2.890083</td>\n","      <td>1.109969</td>\n","      <td>-0.121359</td>\n","      <td>-2.261857</td>\n","      <td>0.247998</td>\n","      <td>378.66</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1.0</td>\n","      <td>-0.966272</td>\n","      <td>-0.185226</td>\n","      <td>1.792993</td>\n","      <td>-0.863291</td>\n","      <td>-0.010309</td>\n","      <td>1.247203</td>\n","      <td>0.237609</td>\n","      <td>-1.387024</td>\n","      <td>-0.054952</td>\n","      <td>-0.226487</td>\n","      <td>0.178228</td>\n","      <td>-0.287924</td>\n","      <td>-1.059647</td>\n","      <td>-0.684093</td>\n","      <td>1.965775</td>\n","      <td>-1.232622</td>\n","      <td>-0.108300</td>\n","      <td>123.50</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2.0</td>\n","      <td>-1.158233</td>\n","      <td>0.877737</td>\n","      <td>1.548718</td>\n","      <td>0.403034</td>\n","      <td>-0.407193</td>\n","      <td>0.095921</td>\n","      <td>0.592941</td>\n","      <td>0.817739</td>\n","      <td>0.753074</td>\n","      <td>-0.822843</td>\n","      <td>0.538196</td>\n","      <td>-1.119670</td>\n","      <td>-0.451449</td>\n","      <td>-0.237033</td>\n","      <td>-0.038195</td>\n","      <td>0.803487</td>\n","      <td>-0.009431</td>\n","      <td>69.99</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["   Time        V1        V2        V3  ...       V19       V21  Amount  Class\n","0   0.0 -1.359807 -0.072781  2.536347  ...  0.403993 -0.018307  149.62      0\n","1   0.0  1.191857  0.266151  0.166480  ... -0.145783 -0.225775    2.69      0\n","2   1.0 -1.358354 -1.340163  1.773209  ... -2.261857  0.247998  378.66      0\n","3   1.0 -0.966272 -0.185226  1.792993  ... -1.232622 -0.108300  123.50      0\n","4   2.0 -1.158233  0.877737  1.548718  ...  0.803487 -0.009431   69.99      0\n","\n","[5 rows x 20 columns]"]},"metadata":{"tags":[]},"execution_count":5}]},{"cell_type":"markdown","metadata":{"id":"IzAJTScwh66W"},"source":["## Training\n","\n"]},{"cell_type":"code","metadata":{"id":"74MXLskSithc"},"source":["X = df.drop(['Class'],axis = 1)\n","y = df['Class']\n","X_train, X_test, Y_train, Y_test = train_test_split(X,y,test_size = 0.2, random_state = 42)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"Gz9AGZqNagab"},"source":["clf = XGBClassifier()"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"RFMoOMVKmJEA"},"source":["param_grid = {\r\n","        'min_child_weight': [1, 5, 10],\r\n","        'subsample': [0.6, 0.8, 1.0],\r\n","        'colsample_bytree': [0.6, 0.8, 1.0],\r\n","        'max_depth': [3, 4, 5]\r\n","}\r\n","\r\n","rs_clf = RandomizedSearchCV(clf, param_grid, n_jobs=-1, verbose=3, cv=3, random_state=0)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"RivyE5-ImOrQ","executionInfo":{"status":"ok","timestamp":1607628754396,"user_tz":360,"elapsed":558991,"user":{"displayName":"Ryan J Rue","photoUrl":"","userId":"16511186244919382186"}},"outputId":"5dec1086-3a37-4f9e-e2c7-6cc53b223665"},"source":["%%time\n","rs_clf.fit(X_train, Y_train)\n","pred = rs_clf.predict_proba(X_test)[:,1]"],"execution_count":null,"outputs":[{"output_type":"stream","text":["Fitting 3 folds for each of 10 candidates, totalling 30 fits\n"],"name":"stdout"},{"output_type":"stream","text":["[Parallel(n_jobs=-1)]: Using backend LokyBackend with 2 concurrent workers.\n","[Parallel(n_jobs=-1)]: Done  30 out of  30 | elapsed:  8.4min finished\n"],"name":"stderr"},{"output_type":"stream","text":["CPU times: user 52.4 s, sys: 262 ms, total: 52.6 s\n","Wall time: 9min 18s\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"OnQfu8SZJl_C"},"source":["preds2=rs_clf.predict(X_test)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"5Sb0k85gZGba","executionInfo":{"status":"ok","timestamp":1607628936391,"user_tz":360,"elapsed":335,"user":{"displayName":"Ryan J Rue","photoUrl":"","userId":"16511186244919382186"}},"outputId":"770c0e27-59ff-430c-9465-10ecc99b41bf"},"source":["auc_score = roc_auc_score(Y_test, pred)\r\n","recall = recall_score(Y_test, preds2)\r\n","precision = precision_score(Y_test, preds2)\r\n","print('AUC score:', auc_score)\r\n","print('recall:',recall)\r\n","print('precision:',precision)"],"execution_count":null,"outputs":[{"output_type":"stream","text":["AUC score: 0.9799962208434301\n","recall: 0.8163265306122449\n","precision: 0.9523809523809523\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":337},"id":"21BwxCWWISrQ","executionInfo":{"status":"ok","timestamp":1607629198953,"user_tz":360,"elapsed":568,"user":{"displayName":"Ryan J Rue","photoUrl":"","userId":"16511186244919382186"}},"outputId":"aacf2894-6bb9-4dfe-8bf1-d8ecf39733b3"},"source":["import seaborn as sns\r\n","#confusion_matrix(Y_test,preds2)\r\n","confusion_matrix = pd.DataFrame(data=cm, columns = ['Predicted:0','Predicted:1'],index = ['Actual:0','Actual:1'])\r\n","plt.figure(figsize = (8,5))\r\n","sns.heatmap(confusion_matrix, annot=True, fmt='d',cmap = 'YlGnBu')"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<matplotlib.axes._subplots.AxesSubplot at 0x7f6e30d3d320>"]},"metadata":{"tags":[]},"execution_count":29},{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 576x360 with 2 Axes>"]},"metadata":{"tags":[],"needs_background":"light"}}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":104},"id":"zQPejAVIKO-5","executionInfo":{"status":"ok","timestamp":1607629177212,"user_tz":360,"elapsed":359,"user":{"displayName":"Ryan J Rue","photoUrl":"","userId":"16511186244919382186"}},"outputId":"e8a7320e-e32c-47d1-e356-5ffe546cc78a"},"source":["confusion_matrix"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Predicted:0</th>\n","      <th>Predicted:1</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>Actual:0</th>\n","      <td>56860</td>\n","      <td>4</td>\n","    </tr>\n","    <tr>\n","      <th>Actual:1</th>\n","      <td>18</td>\n","      <td>80</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["          Predicted:0  Predicted:1\n","Actual:0        56860            4\n","Actual:1           18           80"]},"metadata":{"tags":[]},"execution_count":27}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":295},"id":"_ruUIyZ1ZH1d","executionInfo":{"status":"ok","timestamp":1607634851944,"user_tz":360,"elapsed":677,"user":{"displayName":"Ryan J Rue","photoUrl":"","userId":"16511186244919382186"}},"outputId":"774becf4-7747-417c-ea0f-6f37dcf322c5"},"source":["plot_roc_curve(rs_clf, X_test, Y_test)"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<sklearn.metrics._plot.roc_curve.RocCurveDisplay at 0x7f6e0c0a4518>"]},"metadata":{"tags":[]},"execution_count":45},{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"tags":[],"needs_background":"light"}}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"cJzd2psSZ5Oa","executionInfo":{"status":"ok","timestamp":1607629302717,"user_tz":360,"elapsed":290,"user":{"displayName":"Ryan J Rue","photoUrl":"","userId":"16511186244919382186"}},"outputId":"feb98ec4-3529-44b1-ccb1-5aabd2625bf0"},"source":["print('best estimator:')\r\n","print(rs_clf.best_estimator_)"],"execution_count":null,"outputs":[{"output_type":"stream","text":["best estimator:\n","XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,\n","              colsample_bynode=1, colsample_bytree=1.0, gamma=0,\n","              learning_rate=0.1, max_delta_step=0, max_depth=5,\n","              min_child_weight=1, missing=None, n_estimators=100, n_jobs=1,\n","              nthread=None, objective='binary:logistic', random_state=0,\n","              reg_alpha=0, reg_lambda=1, scale_pos_weight=1, seed=None,\n","              silent=None, subsample=1.0, verbosity=1)\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"OmhMRToeKH1X"},"source":["## SMOTE Training"]},{"cell_type":"code","metadata":{"id":"yAwxA-o6ev4M"},"source":["X_train2 = X_train.values\r\n","Y_train2 = Y_train.values"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"v-pmobo2Uv3f","executionInfo":{"status":"ok","timestamp":1607634260358,"user_tz":360,"elapsed":2410999,"user":{"displayName":"Ryan J Rue","photoUrl":"","userId":"16511186244919382186"}},"outputId":"a233e2ff-6c6d-460e-8f50-8de890aea49a"},"source":["# https://www.kaggle.com/janiobachmann/credit-fraud-dealing-with-imbalanced-datasets <- REFERENCE CELL 40\n","\n","# List to append the score and then find the average\n","auc_lst = []\n","precision_lst = []\n","recall_lst = []\n","\n","#Implementing SMOTE Technique\n","kf = KFold(n_splits=3, random_state=0, shuffle=False)\n","\n","#model\n","clf2 = XGBClassifier()\n","\n","#model CV\n","rs_clf2 = RandomizedSearchCV(clf2, param_grid, cv=3, n_jobs=-1, verbose=3, random_state=0)\n","\n","for train, test in kf.split(X_train2, Y_train2):\n","  pipeline = make_pipeline(SMOTE(sampling_strategy='minority'), rs_clf2)\n","  model = pipeline.fit(X_train2[train], Y_train2[train])\n","  best_est = rs_clf2.best_estimator_\n","  preds = best_est.predict(X_train2[test])\n","  preds2 = best_est.predict_proba(X_train2[test])[:,1]\n","\n","  auc_lst.append(roc_auc_score(Y_train2[test], preds2))\n","  precision_lst.append(precision_score(Y_train2[test], preds))\n","  recall_lst.append(recall_score(Y_train2[test], preds))"],"execution_count":null,"outputs":[{"output_type":"stream","text":["/usr/local/lib/python3.6/dist-packages/sklearn/model_selection/_split.py:296: FutureWarning: Setting a random_state has no effect since shuffle is False. This will raise an error in 0.24. You should leave random_state to its default (None), or set shuffle=True.\n","  FutureWarning\n","/usr/local/lib/python3.6/dist-packages/sklearn/utils/deprecation.py:87: FutureWarning: Function safe_indexing is deprecated; safe_indexing is deprecated in version 0.22 and will be removed in version 0.24.\n","  warnings.warn(msg, category=FutureWarning)\n"],"name":"stderr"},{"output_type":"stream","text":["Fitting 3 folds for each of 10 candidates, totalling 30 fits\n"],"name":"stdout"},{"output_type":"stream","text":["[Parallel(n_jobs=-1)]: Using backend LokyBackend with 2 concurrent workers.\n","[Parallel(n_jobs=-1)]: Done  30 out of  30 | elapsed: 12.6min finished\n","/usr/local/lib/python3.6/dist-packages/sklearn/utils/deprecation.py:87: FutureWarning: Function safe_indexing is deprecated; safe_indexing is deprecated in version 0.22 and will be removed in version 0.24.\n","  warnings.warn(msg, category=FutureWarning)\n"],"name":"stderr"},{"output_type":"stream","text":["Fitting 3 folds for each of 10 candidates, totalling 30 fits\n"],"name":"stdout"},{"output_type":"stream","text":["[Parallel(n_jobs=-1)]: Using backend LokyBackend with 2 concurrent workers.\n","[Parallel(n_jobs=-1)]: Done  30 out of  30 | elapsed: 12.4min finished\n","/usr/local/lib/python3.6/dist-packages/sklearn/utils/deprecation.py:87: FutureWarning: Function safe_indexing is deprecated; safe_indexing is deprecated in version 0.22 and will be removed in version 0.24.\n","  warnings.warn(msg, category=FutureWarning)\n"],"name":"stderr"},{"output_type":"stream","text":["Fitting 3 folds for each of 10 candidates, totalling 30 fits\n"],"name":"stdout"},{"output_type":"stream","text":["[Parallel(n_jobs=-1)]: Using backend LokyBackend with 2 concurrent workers.\n","[Parallel(n_jobs=-1)]: Done  30 out of  30 | elapsed: 12.3min finished\n"],"name":"stderr"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"U4X-G-fAMkPQ","executionInfo":{"status":"ok","timestamp":1607634260376,"user_tz":360,"elapsed":2165342,"user":{"displayName":"Ryan J Rue","photoUrl":"","userId":"16511186244919382186"}},"outputId":"5f9f4ae5-00f8-4502-ed7e-d1b3fef1e070"},"source":["print(\"auc: {}\".format(np.mean(auc_lst)))\r\n","print(\"recall: {}\".format(np.mean(recall_lst)))\r\n","print(\"precision: {}\".format(np.mean(precision_lst)))"],"execution_count":null,"outputs":[{"output_type":"stream","text":["auc: 0.9755375992617066\n","recall: 0.8443952423167849\n","precision: 0.4563646211559827\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"rmrrBZhAoOgl","colab":{"base_uri":"https://localhost:8080/","height":295},"executionInfo":{"status":"ok","timestamp":1607634983975,"user_tz":360,"elapsed":775,"user":{"displayName":"Ryan J Rue","photoUrl":"","userId":"16511186244919382186"}},"outputId":"4b7f0b43-8c41-4cf4-b135-dd61bf773998"},"source":["X_test2 = X_test.values\r\n","Y_test2 = Y_test.values\r\n","\r\n","plot_roc_curve(rs_clf2, X_test2, Y_test2)"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<sklearn.metrics._plot.roc_curve.RocCurveDisplay at 0x7f6e0bd190b8>"]},"metadata":{"tags":[]},"execution_count":49},{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"tags":[],"needs_background":"light"}}]},{"cell_type":"code","metadata":{"id":"X7pSWUREOl5n"},"source":["del confusion_matrix"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"jtEzApSjP0mY"},"source":["preds = rs_clf2.predict(X_test2)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":337},"id":"vmqBRTORNb3E","executionInfo":{"status":"ok","timestamp":1607635134240,"user_tz":360,"elapsed":436,"user":{"displayName":"Ryan J Rue","photoUrl":"","userId":"16511186244919382186"}},"outputId":"b4ee8353-89d4-483c-bdd1-f8b118ed03c7"},"source":["cm = confusion_matrix(Y_test2,preds)\r\n","confusion_mat = pd.DataFrame(data=cm, columns = ['Predicted:0','Predicted:1'],index = ['Actual:0','Actual:1'])\r\n","plt.figure(figsize = (8,5))\r\n","sns.heatmap(confusion_mat, annot=True, fmt='d',cmap = 'YlGnBu')"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<matplotlib.axes._subplots.AxesSubplot at 0x7f6e0bc1ff60>"]},"metadata":{"tags":[]},"execution_count":58},{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 576x360 with 2 Axes>"]},"metadata":{"tags":[],"needs_background":"light"}}]},{"cell_type":"code","metadata":{"id":"Bv3QKKu7VxXP"},"source":[""],"execution_count":null,"outputs":[]}]}