{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"BDS_modeling","provenance":[],"collapsed_sections":[]},"kernelspec":{"name":"python3","display_name":"Python 3"}},"cells":[{"cell_type":"markdown","metadata":{"id":"dElkAyTWQ8yg"},"source":["Reference:\n","\n","https://www.kaggle.com/currie32/predicting-fraud-with-tensorflow\n","\n","https://www.kaggle.com/janiobachmann/credit-fraud-dealing-with-imbalanced-datasets\n","\n","https://www.kaggle.com/nschneider/gbm-vs-xgboost-vs-lightgbm"]},{"cell_type":"code","metadata":{"id":"HhMUs5KJT8a_","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1607447685658,"user_tz":360,"elapsed":367,"user":{"displayName":"Ryan J Rue","photoUrl":"","userId":"16511186244919382186"}},"outputId":"fc9f4667-b918-4afd-b008-e3cf21a85b1d"},"source":["# Imported Libraries\n","\n","import numpy as np # linear algebra\n","import pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\n","import tensorflow as tf\n","import matplotlib.pyplot as plt\n","import seaborn as sns\n","from sklearn.manifold import TSNE\n","from sklearn.decomposition import PCA, TruncatedSVD\n","import matplotlib.patches as mpatches\n","import time\n","import matplotlib.gridspec as gridspec\n","\n","#training models\n","from sklearn.model_selection import train_test_split, KFold\n","from sklearn.linear_model import LogisticRegression\n","from sklearn.ensemble import RandomForestClassifier\n","from xgboost import XGBClassifier\n","from sklearn.metrics import roc_curve, roc_auc_score, classification_report, accuracy_score, confusion_matrix \n","\n","\n","\n","from google.colab import drive\n","drive.mount('/drive')"],"execution_count":null,"outputs":[{"output_type":"stream","text":["Drive already mounted at /drive; to attempt to forcibly remount, call drive.mount(\"/drive\", force_remount=True).\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"sqf1PWdlU5MZ"},"source":["df = pd.read_csv('/drive/My Drive/BDS_Project/creditcard.csv')"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":210},"id":"1ct6bNYTXowV","executionInfo":{"status":"ok","timestamp":1607445590257,"user_tz":360,"elapsed":332,"user":{"displayName":"Ryan J Rue","photoUrl":"","userId":"16511186244919382186"}},"outputId":"892eb3c6-b4ab-4737-fa57-bf3839741bcf"},"source":["df.head()"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Time</th>\n","      <th>V1</th>\n","      <th>V2</th>\n","      <th>V3</th>\n","      <th>V4</th>\n","      <th>V5</th>\n","      <th>V6</th>\n","      <th>V7</th>\n","      <th>V8</th>\n","      <th>V9</th>\n","      <th>V10</th>\n","      <th>V11</th>\n","      <th>V12</th>\n","      <th>V13</th>\n","      <th>V14</th>\n","      <th>V15</th>\n","      <th>V16</th>\n","      <th>V17</th>\n","      <th>V18</th>\n","      <th>V19</th>\n","      <th>V20</th>\n","      <th>V21</th>\n","      <th>V22</th>\n","      <th>V23</th>\n","      <th>V24</th>\n","      <th>V25</th>\n","      <th>V26</th>\n","      <th>V27</th>\n","      <th>V28</th>\n","      <th>Amount</th>\n","      <th>Class</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0.0</td>\n","      <td>-1.359807</td>\n","      <td>-0.072781</td>\n","      <td>2.536347</td>\n","      <td>1.378155</td>\n","      <td>-0.338321</td>\n","      <td>0.462388</td>\n","      <td>0.239599</td>\n","      <td>0.098698</td>\n","      <td>0.363787</td>\n","      <td>0.090794</td>\n","      <td>-0.551600</td>\n","      <td>-0.617801</td>\n","      <td>-0.991390</td>\n","      <td>-0.311169</td>\n","      <td>1.468177</td>\n","      <td>-0.470401</td>\n","      <td>0.207971</td>\n","      <td>0.025791</td>\n","      <td>0.403993</td>\n","      <td>0.251412</td>\n","      <td>-0.018307</td>\n","      <td>0.277838</td>\n","      <td>-0.110474</td>\n","      <td>0.066928</td>\n","      <td>0.128539</td>\n","      <td>-0.189115</td>\n","      <td>0.133558</td>\n","      <td>-0.021053</td>\n","      <td>149.62</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>0.0</td>\n","      <td>1.191857</td>\n","      <td>0.266151</td>\n","      <td>0.166480</td>\n","      <td>0.448154</td>\n","      <td>0.060018</td>\n","      <td>-0.082361</td>\n","      <td>-0.078803</td>\n","      <td>0.085102</td>\n","      <td>-0.255425</td>\n","      <td>-0.166974</td>\n","      <td>1.612727</td>\n","      <td>1.065235</td>\n","      <td>0.489095</td>\n","      <td>-0.143772</td>\n","      <td>0.635558</td>\n","      <td>0.463917</td>\n","      <td>-0.114805</td>\n","      <td>-0.183361</td>\n","      <td>-0.145783</td>\n","      <td>-0.069083</td>\n","      <td>-0.225775</td>\n","      <td>-0.638672</td>\n","      <td>0.101288</td>\n","      <td>-0.339846</td>\n","      <td>0.167170</td>\n","      <td>0.125895</td>\n","      <td>-0.008983</td>\n","      <td>0.014724</td>\n","      <td>2.69</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1.0</td>\n","      <td>-1.358354</td>\n","      <td>-1.340163</td>\n","      <td>1.773209</td>\n","      <td>0.379780</td>\n","      <td>-0.503198</td>\n","      <td>1.800499</td>\n","      <td>0.791461</td>\n","      <td>0.247676</td>\n","      <td>-1.514654</td>\n","      <td>0.207643</td>\n","      <td>0.624501</td>\n","      <td>0.066084</td>\n","      <td>0.717293</td>\n","      <td>-0.165946</td>\n","      <td>2.345865</td>\n","      <td>-2.890083</td>\n","      <td>1.109969</td>\n","      <td>-0.121359</td>\n","      <td>-2.261857</td>\n","      <td>0.524980</td>\n","      <td>0.247998</td>\n","      <td>0.771679</td>\n","      <td>0.909412</td>\n","      <td>-0.689281</td>\n","      <td>-0.327642</td>\n","      <td>-0.139097</td>\n","      <td>-0.055353</td>\n","      <td>-0.059752</td>\n","      <td>378.66</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1.0</td>\n","      <td>-0.966272</td>\n","      <td>-0.185226</td>\n","      <td>1.792993</td>\n","      <td>-0.863291</td>\n","      <td>-0.010309</td>\n","      <td>1.247203</td>\n","      <td>0.237609</td>\n","      <td>0.377436</td>\n","      <td>-1.387024</td>\n","      <td>-0.054952</td>\n","      <td>-0.226487</td>\n","      <td>0.178228</td>\n","      <td>0.507757</td>\n","      <td>-0.287924</td>\n","      <td>-0.631418</td>\n","      <td>-1.059647</td>\n","      <td>-0.684093</td>\n","      <td>1.965775</td>\n","      <td>-1.232622</td>\n","      <td>-0.208038</td>\n","      <td>-0.108300</td>\n","      <td>0.005274</td>\n","      <td>-0.190321</td>\n","      <td>-1.175575</td>\n","      <td>0.647376</td>\n","      <td>-0.221929</td>\n","      <td>0.062723</td>\n","      <td>0.061458</td>\n","      <td>123.50</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2.0</td>\n","      <td>-1.158233</td>\n","      <td>0.877737</td>\n","      <td>1.548718</td>\n","      <td>0.403034</td>\n","      <td>-0.407193</td>\n","      <td>0.095921</td>\n","      <td>0.592941</td>\n","      <td>-0.270533</td>\n","      <td>0.817739</td>\n","      <td>0.753074</td>\n","      <td>-0.822843</td>\n","      <td>0.538196</td>\n","      <td>1.345852</td>\n","      <td>-1.119670</td>\n","      <td>0.175121</td>\n","      <td>-0.451449</td>\n","      <td>-0.237033</td>\n","      <td>-0.038195</td>\n","      <td>0.803487</td>\n","      <td>0.408542</td>\n","      <td>-0.009431</td>\n","      <td>0.798278</td>\n","      <td>-0.137458</td>\n","      <td>0.141267</td>\n","      <td>-0.206010</td>\n","      <td>0.502292</td>\n","      <td>0.219422</td>\n","      <td>0.215153</td>\n","      <td>69.99</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["   Time        V1        V2        V3  ...       V27       V28  Amount  Class\n","0   0.0 -1.359807 -0.072781  2.536347  ...  0.133558 -0.021053  149.62      0\n","1   0.0  1.191857  0.266151  0.166480  ... -0.008983  0.014724    2.69      0\n","2   1.0 -1.358354 -1.340163  1.773209  ... -0.055353 -0.059752  378.66      0\n","3   1.0 -0.966272 -0.185226  1.792993  ...  0.062723  0.061458  123.50      0\n","4   2.0 -1.158233  0.877737  1.548718  ...  0.219422  0.215153   69.99      0\n","\n","[5 rows x 31 columns]"]},"metadata":{"tags":[]},"execution_count":3}]},{"cell_type":"code","metadata":{"id":"Ip5o-IofhH0j"},"source":["df = df.drop(['V28','V27','V26','V25','V24','V23','V22','V20','V15','V13','V8'], axis =1)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"Bm1JgvJMjgAF","colab":{"base_uri":"https://localhost:8080/","height":210},"executionInfo":{"status":"ok","timestamp":1607447170324,"user_tz":360,"elapsed":317,"user":{"displayName":"Ryan J Rue","photoUrl":"","userId":"16511186244919382186"}},"outputId":"44455441-daf8-40cb-c227-3d6d966ead00"},"source":["df.head()"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Time</th>\n","      <th>V1</th>\n","      <th>V2</th>\n","      <th>V3</th>\n","      <th>V4</th>\n","      <th>V5</th>\n","      <th>V6</th>\n","      <th>V7</th>\n","      <th>V9</th>\n","      <th>V10</th>\n","      <th>V11</th>\n","      <th>V12</th>\n","      <th>V14</th>\n","      <th>V16</th>\n","      <th>V17</th>\n","      <th>V18</th>\n","      <th>V19</th>\n","      <th>V21</th>\n","      <th>Amount</th>\n","      <th>Class</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0.0</td>\n","      <td>-1.359807</td>\n","      <td>-0.072781</td>\n","      <td>2.536347</td>\n","      <td>1.378155</td>\n","      <td>-0.338321</td>\n","      <td>0.462388</td>\n","      <td>0.239599</td>\n","      <td>0.363787</td>\n","      <td>0.090794</td>\n","      <td>-0.551600</td>\n","      <td>-0.617801</td>\n","      <td>-0.311169</td>\n","      <td>-0.470401</td>\n","      <td>0.207971</td>\n","      <td>0.025791</td>\n","      <td>0.403993</td>\n","      <td>-0.018307</td>\n","      <td>149.62</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>0.0</td>\n","      <td>1.191857</td>\n","      <td>0.266151</td>\n","      <td>0.166480</td>\n","      <td>0.448154</td>\n","      <td>0.060018</td>\n","      <td>-0.082361</td>\n","      <td>-0.078803</td>\n","      <td>-0.255425</td>\n","      <td>-0.166974</td>\n","      <td>1.612727</td>\n","      <td>1.065235</td>\n","      <td>-0.143772</td>\n","      <td>0.463917</td>\n","      <td>-0.114805</td>\n","      <td>-0.183361</td>\n","      <td>-0.145783</td>\n","      <td>-0.225775</td>\n","      <td>2.69</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1.0</td>\n","      <td>-1.358354</td>\n","      <td>-1.340163</td>\n","      <td>1.773209</td>\n","      <td>0.379780</td>\n","      <td>-0.503198</td>\n","      <td>1.800499</td>\n","      <td>0.791461</td>\n","      <td>-1.514654</td>\n","      <td>0.207643</td>\n","      <td>0.624501</td>\n","      <td>0.066084</td>\n","      <td>-0.165946</td>\n","      <td>-2.890083</td>\n","      <td>1.109969</td>\n","      <td>-0.121359</td>\n","      <td>-2.261857</td>\n","      <td>0.247998</td>\n","      <td>378.66</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1.0</td>\n","      <td>-0.966272</td>\n","      <td>-0.185226</td>\n","      <td>1.792993</td>\n","      <td>-0.863291</td>\n","      <td>-0.010309</td>\n","      <td>1.247203</td>\n","      <td>0.237609</td>\n","      <td>-1.387024</td>\n","      <td>-0.054952</td>\n","      <td>-0.226487</td>\n","      <td>0.178228</td>\n","      <td>-0.287924</td>\n","      <td>-1.059647</td>\n","      <td>-0.684093</td>\n","      <td>1.965775</td>\n","      <td>-1.232622</td>\n","      <td>-0.108300</td>\n","      <td>123.50</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2.0</td>\n","      <td>-1.158233</td>\n","      <td>0.877737</td>\n","      <td>1.548718</td>\n","      <td>0.403034</td>\n","      <td>-0.407193</td>\n","      <td>0.095921</td>\n","      <td>0.592941</td>\n","      <td>0.817739</td>\n","      <td>0.753074</td>\n","      <td>-0.822843</td>\n","      <td>0.538196</td>\n","      <td>-1.119670</td>\n","      <td>-0.451449</td>\n","      <td>-0.237033</td>\n","      <td>-0.038195</td>\n","      <td>0.803487</td>\n","      <td>-0.009431</td>\n","      <td>69.99</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["   Time        V1        V2        V3  ...       V19       V21  Amount  Class\n","0   0.0 -1.359807 -0.072781  2.536347  ...  0.403993 -0.018307  149.62      0\n","1   0.0  1.191857  0.266151  0.166480  ... -0.145783 -0.225775    2.69      0\n","2   1.0 -1.358354 -1.340163  1.773209  ... -2.261857  0.247998  378.66      0\n","3   1.0 -0.966272 -0.185226  1.792993  ... -1.232622 -0.108300  123.50      0\n","4   2.0 -1.158233  0.877737  1.548718  ...  0.803487 -0.009431   69.99      0\n","\n","[5 rows x 20 columns]"]},"metadata":{"tags":[]},"execution_count":9}]},{"cell_type":"markdown","metadata":{"id":"IzAJTScwh66W"},"source":["## Training\n","\n"]},{"cell_type":"code","metadata":{"id":"74MXLskSithc"},"source":["X = df.drop(['Class'],axis = 1)\n","y = df['Class']\n","X_train, X_test, Y_train, Y_test = train_test_split(X,y,test_size = 0.2, random_state = 42)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":282},"id":"v-pmobo2Uv3f","executionInfo":{"status":"error","timestamp":1607448245416,"user_tz":360,"elapsed":332,"user":{"displayName":"Ryan J Rue","photoUrl":"","userId":"16511186244919382186"}},"outputId":"4a806b12-87c6-4137-d5d3-0ee3b1144351"},"source":["# https://www.kaggle.com/janiobachmann/credit-fraud-dealing-with-imbalanced-datasets <- REFERENCE CELL 40\n","\n","from imblearn.over_sampling import SMOTE\n","from imblearn.pipeline import make_pipeline\n","\n","# List to append the score and then find the average\n","accuracy_lst = []\n","precision_lst = []\n","recall_lst = []\n","f1_lst = []\n","auc_lst = []\n","\n","#Implementing SMOTE Technique\n","kf = KFold(n_splits=5, random_state=0, shuffle=False)\n","\n","#model\n","#lr = LogisticRegression()\n","\n","#mode larams\n","#lr_params = {\"penalty\": ['l1', 'l2'], 'C': [0.001, 0.01, 0.1, 1, 10, 100, 1000]}\n","\n","#model CV\n","#lr_cv = RandomizedSearchCV(LogisticRegression(), params, n_iter=4)\n","\n","for train, test in kf.split(X_train, y_train):\n","  pipeline = make_pipeline(SMOTE(sampling_strategy='minority'), lr_cv)\n","  model = pipeline.fit(X_train[train], y_train[train])\n","  best_est = lr_cv.best_estimator_\n","  preds = best_est.predict(X_train[test])\n","\n","  accuracy_lst.append(pipeline.score(original_Xtrain[test], original_ytrain[test]))\n","  precision_lst.append(precision_score(original_ytrain[test], prediction))\n","  recall_lst.append(recall_score(original_ytrain[test], prediction))\n","  f1_lst.append(f1_score(original_ytrain[test], prediction))\n","  auc_lst.append(roc_auc_score(original_ytrain[test], prediction))\n","\n","print(\"accuracy: {}\".format(np.mean(accuracy_lst)))\n","print(\"precision: {}\".format(np.mean(precision_lst)))\n","print(\"recall: {}\".format(np.mean(recall_lst)))\n","print(\"f1: {}\".format(np.mean(f1_lst)))"],"execution_count":null,"outputs":[{"output_type":"stream","text":["/usr/local/lib/python3.6/dist-packages/sklearn/model_selection/_split.py:296: FutureWarning: Setting a random_state has no effect since shuffle is False. This will raise an error in 0.24. You should leave random_state to its default (None), or set shuffle=True.\n","  FutureWarning\n"],"name":"stderr"},{"output_type":"error","ename":"NameError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m<ipython-input-16-017a920a8060>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[1;32m     23\u001b[0m \u001b[0;31m#lr_cv = RandomizedSearchCV(LogisticRegression(), params, n_iter=4)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     24\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 25\u001b[0;31m \u001b[0;32mfor\u001b[0m \u001b[0mtrain\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mtest\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mkf\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0msplit\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mX_train\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0my_train\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     26\u001b[0m   \u001b[0mpipeline\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mmake_pipeline\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mSMOTE\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0msampling_strategy\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m'minority'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mlr_cv\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     27\u001b[0m   \u001b[0mmodel\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mpipeline\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mfit\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mX_train\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mtrain\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0my_train\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mtrain\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mNameError\u001b[0m: name 'y_train' is not defined"]}]},{"cell_type":"code","metadata":{"id":"RFMoOMVKmJEA"},"source":["lr = LogisticRegression(C=10,random_state=42,max_iter = 100000)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"RivyE5-ImOrQ","executionInfo":{"status":"ok","timestamp":1607049383694,"user_tz":360,"elapsed":10677,"user":{"displayName":"Han Yi Jiang","photoUrl":"","userId":"06227669185065127869"}},"outputId":"3ec8794e-888a-4fdd-d25d-118e824b9e75"},"source":["lr.fit(trainX, trainY)\n","lr_pred = lr.predict_proba(testX)[:,1]\n","#solution = pd.DataFrame({\"id\":testX, \"Y\":lr_pred})\n","valid_score = roc_auc_score(testY, lr_pred)\n","print('Validation ROC-AUC score:', valid_score)"],"execution_count":null,"outputs":[{"output_type":"stream","text":["Validation ROC-AUC score: 0.9083217171224145\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"SbrLw-yEmcmq","executionInfo":{"status":"ok","timestamp":1607051324888,"user_tz":360,"elapsed":1897272,"user":{"displayName":"Han Yi Jiang","photoUrl":"","userId":"06227669185065127869"}},"outputId":"e425a79f-6a3c-4b56-e34b-64e58a3cfa08"},"source":["rf = RandomForestClassifier(n_estimators = 1000, oob_score= True, random_state=42)\n","rf.fit(trainX, trainY)\n","rf_pred = rf.predict_proba(testX)[:,1]\n","#solution = pd.DataFrame({\"id\":testX.Id, \"Y\":rf_pred})\n","valid_score = roc_auc_score(testY, rf_pred)\n","print('Validation ROC-AUC score:', valid_score)"],"execution_count":null,"outputs":[{"output_type":"stream","text":["Validation ROC-AUC score: 0.9696353921422254\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"M_HKmZ-dWVpm"},"source":[""],"execution_count":null,"outputs":[]}]}